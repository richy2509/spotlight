/**
 * MIXIN
 *
 * @type base
 */

/** ----------------------------------------------------------------
 * LAYOUT
 */

.clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

.center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.size(@width; @height) {
  width: @width;
  height: @height;
}

.square(@value) {
  width: @value;
  height: @value;
}

.opacity(@opacity) {
  opacity: @opacity;
  @opacity-ie: (@opacity * 100);
  filter: ~"alpha(opacity=@{opacity-ie})";
}

.background-size(@size) {
  -webkit-background-size: @size;
  background-size: @size;
}

.box-shadow(@shadow) {
  -webkit-box-shadow: @shadow; // iOS <4.3 & Android <4.1
  box-shadow: @shadow;
}

.box-sizing(@boxmodel: border-box) {
  -webkit-box-sizing: @boxmodel;
  -moz-box-sizing: @boxmodel;
  box-sizing: @boxmodel;
}

.border-radius(@radius;) {
  -webkit-border-radius: ~"@{radius}";
  -moz-border-radius: ~"@{radius}";
  border-radius: ~"@{radius}";
}

.border(@color; @size: 1px; @type: solid) {
  border: @size @type @color;
}

.appearance(@param) {
  -webkit-appearance: @param;
  -moz-appearance: @param;
  appearance: @param;
}

.column(@count; @width: auto) {
  -webkit-column-count: @count;
  -moz-column-count: @count;
  column-count: @count;
  -webkit-column-width: @width;
  -moz-column-width: @width;
  column-width: @width;
}

.column-gap(@width) {
  -webkit-column-gap: @width;
  -moz-column-gap: @width;
  column-gap: @width;
}

.gradient(@startColor: #eee; @endColor: @white) {
  background-color: @startColor;
  background: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
  background: -webkit-linear-gradient(top, @startColor, @endColor);
  background: -moz-linear-gradient(top, @startColor, @endColor);
  background: -ms-linear-gradient(top, @startColor, @endColor);
  background: -o-linear-gradient(top, @startColor, @endColor);
}

.horizontal-gradient(@startColor: #eee, @endColor: @white) {
  background-color: @startColor;
  background-image: -webkit-gradient(linear, left top, right top, from(@startColor), to(@endColor));
  background-image: -webkit-linear-gradient(left, @startColor, @endColor);
  background-image: -moz-linear-gradient(left, @startColor, @endColor);
  background-image: -ms-linear-gradient(left, @startColor, @endColor);
  background-image: -o-linear-gradient(left, @startColor, @endColor);
}

// TODO add parameter for deg
.diagonal-gradient(@startColor: #3f4144, @endColor: #46484b) {
  background: #3f4144;
  background: -moz-linear-gradient(-45deg, @startColor 0%, @endColor 50%, @endColor 100%);
  background: -webkit-linear-gradient(-45deg, @startColor 0%, @endColor 50%, @endColor 100%);
  background: linear-gradient(135deg, @startColor 0%, @endColor 50%, @endColor 100%);
}

.diagonal-gradient-primary(@startColor: #397d93, @endColor: #3592b1) {
  background: @startColor;
  background: -moz-linear-gradient(-45deg, @startColor 0%, @endColor 50%, @endColor 100%);
  background: -webkit-linear-gradient(-45deg, @startColor 0%, @endColor 50%, @endColor 100%);
  background: linear-gradient(135deg, @startColor 0%, @endColor 50%, @endColor 100%);
}

.diagonal-gradient-tertiary(@startColor: @brand-tertiary, @endColor: @brand-tertiary) {
  background: @startColor;
  background: -moz-linear-gradient(-45deg, @startColor 0%, @endColor 50%, @endColor 100%);
  background: -webkit-linear-gradient(-45deg, @startColor 0%, @endColor 50%, @endColor 100%);
  background: linear-gradient(135deg, @startColor 0%, @endColor 50%, @endColor 100%);
}

.diagonal-gradient-white(@startColor: @white, @endColor: @white) {
  background: @startColor;
  background: -moz-linear-gradient(-45deg, @startColor 0%, @endColor 50%, @endColor 100%);
  background: -webkit-linear-gradient(-45deg, @startColor 0%, @endColor 50%, @endColor 100%);
  background: linear-gradient(135deg, @startColor 0%, @endColor 50%, @endColor 100%);
}

.absolute-horizontal-align(@height) {
  height: @height;
  margin-top: -(@height / 2);
  position: absolute;
  top: 50%;
}

.absolute-vertical-align(@width) {
  width: @width;
  margin-left: -(@width / 2);
  position: absolute;
  left: 50%;
}

.shift-width(@width) {
  margin-left: -(@width);
  margin-right: -(@width);
}

.add-block(@margin-top, @margin-bottom: @margin-top) {
  margin-top: @margin-top;
  margin-bottom: @margin-bottom;
}

.add-gutter(@value: @gutter-base) {
  padding-left: @value;
  padding-right: @value;
}

.un-gutter() {
  padding-left: 0;
  padding-right: 0;
}

.calc(@property; @value) {
  @val: ~"@{value}";
    @{property}: -moz-calc(@val);
    @{property}: -webkit-calc(@val);
    @{property}: calc(@val);
}

/** ----------------------------------------------------------------
 * ANIMATION
 */

.animation(@arguments) {
  -webkit-animation: @arguments;
  -moz-animation: @arguments;
  -ms-animation: @arguments;
  -o-animation: @arguments;
  animation: @arguments;
}

.animation-delay(@delay) {
  -webkit-animation-delay: @delay;
  -moz-animation-delay: @delay;
  -ms-animation-delay: @delay;
  -o-animation-delay: @delay;
  animation-delay: @delay;
}

.animation-duration(@duration) {
  -webkit-animation-duration: @duration;
  -moz-animation-duration: @duration;
  -ms-animation-duration: @duration;
  -o-animation-duration: @duration;
  animation-duration: @duration;
}

.animation-direction(@direction) {
  -webkit-animation-direction: @direction;
  -moz-animation-direction: @direction;
  -ms-animation-direction: @direction;
  -o-animation-direction: @direction;
  animation-direction: @direction;
}

.animation-iteration-count(@num) {
  -webkit-animation-iteration-count: @num;
  -moz-animation-iteration-count: @num;
  -ms-animation-iteration-count: @num;
  -o-animation-iteration-count: @num;
  animation-iteration-count: @num;
}

.animation-fill-mode(@mode) {
  -webkit-animation-fill-mode: @mode;
  -moz-animation-fill-mode: @mode;
  -ms-animation-fill-mode: @mode;
  -o-animation-fill-mode: @mode;
  animation-fill-mode: @mode;
}

.animation-name(@name) {
  -webkit-animation-name: @name;
  -moz-animation-name: @name;
  -ms-animation-name: @name;
  -o-animation-name: @name;
  animation-name: @name;
}

.backface-visibility(@visibility) {
  -webkit-backface-visibility: @visibility !important;
  -moz-backface-visibility: @visibility !important;
  -ms-backface-visibility: @visibility !important;
  -o-backface-visibility: @visibility !important;
  backface-visibility: @visibility !important;
}

.animation-timing-function(@name) {
  -webkit-animation-timing-function: @name;
  -moz-animation-timing-function: @name;
  -ms-animation-timing-function: @name;
  -o-animation-timing-function: @name;
  animation-timing-function: @name;
}

// TRANSITIONS
.transition(@transition) {
  -webkit-transition: @transition;
  -moz-transition: @transition;
  -ms-transition: @transition;
  -o-transition: @transition;
  transition: @transition;
}

.transition-transform(@duration, @func) {
  -webkit-transition+_: -webkit-transform @duration @func;
  -moz-transition+_: -moz-transform @duration @func;
  -ms-transition+_: -ms-transform @duration @func;
  -o-transition+_: -o-transform @duration @func;
  transition+_: transform @duration @func;
}

.transition-delay(@delay) {
  -webkit-transition-delay+_: @delay;
  -moz-transition-delay+_: @delay;
  -ms-transition-delay+_: @delay;
  -o-transition-delay+_: @delay;
  transition-delay+_: @delay;
}

.transition-duration(@duration) {
  -webkit-transition-duration+_: @duration;
  -moz-transition-duration+_: @duration;
  -ms-transition-duration+_: @duration;
  -o-transition-duration+_: @duration;
  transition-duration+_: @duration;
}

// TRANSFORM
.transform(@origin) {
  -webkit-transform: @origin;
  -moz-transform: @origin;
  -ms-transform: @origin;
  -o-transform: @origin;
  transform: @origin;
}

.transform-origin(@origin) {
  -webkit-transform-origin+_: @origin;
  -moz-transform-origin+_: @origin;
  -ms-transform-origin+_: @origin;
  -o-transform-origin+_: @origin;
  transform-origin+_: @origin;
}

.transform-rotate(@rotate) {
  -webkit-transform+_: rotate(@rotate);
  -moz-transform+_: rotate(@rotate);
  -ms-transform+_: rotate(@rotate);
  -o-transform+_: rotate(@rotate);
  transform+_: rotate(@rotate);
}

.transform-scale(@ratio) {
  -webkit-transform+_: scale(@ratio);
  -moz-transform+_: scale(@ratio);
  -ms-transform+_: scale(@ratio);
  -o-transform+_: scale(@ratio);
  transform+_: scale(@ratio);
}

.transform-translate(@x, @y) {
  -webkit-transform+_: translate(@x, @y);
  -moz-transform+_: translate(@x, @y);
  -ms-transform+_: translate(@x, @y);
  -o-transform+_: translate(@x, @y);
  transform+_: translate(@x, @y);
}

.transform-translateX(@x) {
  -webkit-transform+_: translateX(@x);
  -moz-transform+_: translateX(@x);
  -ms-transform+_: translateX(@x);
  -o-transform+_: translateX(@x);
  transform+_: translateX(@x);
}

.transform-translateY(@y) {
  -webkit-transform+_: translateY(@y);
  -moz-transform+_: translateY(@y);
  -ms-transform+_: translateY(@y);
  -o-transform+_: translateY(@y);
  transform+_: translateY(@y);
}

/** ----------------------------------------------------------------
 * FLEXBOX - The spec: http://www.w3.org/TR/css3-flexbox
 */

// Flexbox display
// flex or inline-flex
.flex-display(@display: flex) {
  display: ~"-webkit-@{display}";
  display: ~"-ms-@{display}box"; // IE10 uses -ms-flexbox
  display: ~"-ms-@{display}"; // IE11
  display: @display;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
.flex(@columns: initial) {
  -webkit-flex: @columns;
  -ms-flex: @columns;
  flex: @columns;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
.flex-direction(@direction: row) {
  -webkit-flex-direction: @direction;
  -ms-flex-direction: @direction;
  flex-direction: @direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
.flex-wrap(@wrap: nowrap) {
  -webkit-flex-wrap: @wrap;
  -ms-flex-wrap: @wrap;
  flex-wrap: @wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
.flex-flow(@flow) {
  -webkit-flex-flow: @flow;
  -ms-flex-flow: @flow;
  flex-flow: @flow;
}

// Display Order
// - applies to: flex items
// <integer>
.flex-order(@order: 0) {
  -webkit-order: @order;
  -ms-order: @order;
  order: @order;
}

// Flex grow factor
// - applies to: flex items
// <number>
.flex-grow(@grow: 0) {
  -webkit-flex-grow: @grow;
  -ms-flex-grow: @grow;
  flex-grow: @grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number>
.flex-shrink(@shrink: 1) {
  -webkit-flex-shrink: @shrink;
  -ms-flex-shrink: @shrink;
  flex-shrink: @shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
.flex-basis(@width: auto) {
  -webkit-flex-basis: @width;
  -ms-flex-basis: @width;
  flex-basis: @width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
.justify-content(@justify: flex-start) {
  -webkit-justify-content: @justify;
  -ms-justify-content: @justify;
  justify-content: @justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
.align-content(@align: stretch) {
  -webkit-align-content: @align;
  -ms-align-content: @align;
  align-content: @align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
.align-items(@align: stretch) {
  -webkit-align-items: @align;
  -ms-align-items: @align;
  align-items: @align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
.align-self(@align: auto) {
  -webkit-align-self: @align;
  -ms-align-self: @align;
  align-self: @align;
}